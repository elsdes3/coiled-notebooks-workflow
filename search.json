[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Using Coiled to Run Jupyter Notebooks",
    "section": "",
    "text": "Using the AWS Management Console, create an AWS Administrator IAM user with secret access keys for programmatic management of AWS resources. Instructions to do this are available from 05:20 - 09:35 of this walkthrough.\nDownload access keys for this IAM user and store them in ~/.aws/credentials under the default profile, as explained in the boto3 documentation.\nEnsure that ~/.aws/config does not exist.\n\n\n\n\nInstall and Configure Mutagen using the official installation documentation\n\ndownload .tar.gz file to ${HOME}\nextract into ${HOME}\nadd extracted contents to system path\n\nrun\nnano ~/.bashrc\nappend the following to the end of the file\nexport PATH=$PATH:/home/&lt;user-name&gt;/mutagen_linux_amd64_vX.XX.X\nsave the file using Ctrl + C\nenter Y to save changes\nsource the modified .bashrc file using\nsource ~/.bashrc\n\n\n\n\n\n\nCreate a Coiled account\nManually create a Coiled API token\nExport the Coiled account name and Coiled API token to the environment variables COILED_ACCOUNT_NAME and COILED_TOKEN respectively\nexport COILED_ACCOUNT_NAME=&lt;coiled-account-name&gt;\nexport COILED_TOKEN=&lt;coiled-token&gt;\n\n\n\n\n\n\n\n\nClone this repo\ngit clone https://github.com/elsdes3/coiled-notebooks-workflow.git\nChange into the root directory\ncd coiled-notebooks-workflow\nLog in to Coiled using\ncoiled login \\\n    --token {env:COILED_TOKEN} \\\n    --account {env:COILED_ACCOUNT_NAME} \\\n    --no-browser\nor\nmake coiled-login\nwhich will create an entry in ~/.config/dask/coiled.yaml.\nPerform the following administrative tasks\n\nAWS\n\ncreate an IAM role coiled-COILED_ACCOUNT_NAME\ncreate an the following IAM policies\n\nCoiledInstancePolicy\nCoiled IAM ongoing and setup policies\n\ncreate an non-admin IAM user\nattach IAM policies to the newly created IAM role\n\nCoiledInstancePolicy\nAmazonS3FullAccess\n\nattach policies to the newly created IAM user\n\nCoiled setup policy\nCoiled ongoing policy\n\ncreate private S3 bucket named oss-shared-scratchp\n\nCoiled\n\nConfigure Coiled to use AWS Cloud with the IAM User created in the step above\nCreate Coiled software environment\n\n\nusing\nmake create\n\n\n\n\n\nStart a Coiled Jupyter notebook from the code directory (the folder to be synced to the cloud notebook)\ncd code && coiled notebook start --sync --region us-east-2 \\\n    --account {env:COILED_ACCOUNT_NAME} \\\n    --name coilednb \\\n    --software &lt;coiled-software-environment-name&gt; \\\n    --vm-type t3.xlarge\nor\nmake coiled-nb\nIf the contents of code/ are to be synced to the Coiled notebook, then run cd code/ before running the coiled notebook start command. This is shown in step 5. above. In make coiled-nb, this is done by tox.ini using the changedir directive.\nThe browser launches the Jupyterlab interface and the contents of the synced folder (code) are visible.\nRun the notebook 01-get-data/coiled_notebooks_demo.ipynb\n\nthe cell to list bucket contents should\n\nrun with no errors since the AWS user has AmazonS3FullAccess privileges\nproduce the following output\n&gt; s3_client.list_buckets()['Buckets']\n[\n    {\n        'Name': 'oss-shared-scratchp',\n        'CreationDate': &lt;creation-datetime(s)-here&gt;\n    },\n    {\n        'Name': &lt;additional-bucket(s)-here&gt;,\n        'CreationDate': &lt;creation-datetime(s)-here&gt;,\n    },\n]\n\n\n\n\n\n\n\nDelete all AWS and Coiled resources that were created by the administrative tasks step earlier using\nmake delete"
  },
  {
    "objectID": "index.html#pre-requisites",
    "href": "index.html#pre-requisites",
    "title": "Using Coiled to Run Jupyter Notebooks",
    "section": "",
    "text": "Using the AWS Management Console, create an AWS Administrator IAM user with secret access keys for programmatic management of AWS resources. Instructions to do this are available from 05:20 - 09:35 of this walkthrough.\nDownload access keys for this IAM user and store them in ~/.aws/credentials under the default profile, as explained in the boto3 documentation.\nEnsure that ~/.aws/config does not exist.\n\n\n\n\nInstall and Configure Mutagen using the official installation documentation\n\ndownload .tar.gz file to ${HOME}\nextract into ${HOME}\nadd extracted contents to system path\n\nrun\nnano ~/.bashrc\nappend the following to the end of the file\nexport PATH=$PATH:/home/&lt;user-name&gt;/mutagen_linux_amd64_vX.XX.X\nsave the file using Ctrl + C\nenter Y to save changes\nsource the modified .bashrc file using\nsource ~/.bashrc\n\n\n\n\n\n\nCreate a Coiled account\nManually create a Coiled API token\nExport the Coiled account name and Coiled API token to the environment variables COILED_ACCOUNT_NAME and COILED_TOKEN respectively\nexport COILED_ACCOUNT_NAME=&lt;coiled-account-name&gt;\nexport COILED_TOKEN=&lt;coiled-token&gt;"
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "Using Coiled to Run Jupyter Notebooks",
    "section": "",
    "text": "Clone this repo\ngit clone https://github.com/elsdes3/coiled-notebooks-workflow.git\nChange into the root directory\ncd coiled-notebooks-workflow\nLog in to Coiled using\ncoiled login \\\n    --token {env:COILED_TOKEN} \\\n    --account {env:COILED_ACCOUNT_NAME} \\\n    --no-browser\nor\nmake coiled-login\nwhich will create an entry in ~/.config/dask/coiled.yaml.\nPerform the following administrative tasks\n\nAWS\n\ncreate an IAM role coiled-COILED_ACCOUNT_NAME\ncreate an the following IAM policies\n\nCoiledInstancePolicy\nCoiled IAM ongoing and setup policies\n\ncreate an non-admin IAM user\nattach IAM policies to the newly created IAM role\n\nCoiledInstancePolicy\nAmazonS3FullAccess\n\nattach policies to the newly created IAM user\n\nCoiled setup policy\nCoiled ongoing policy\n\ncreate private S3 bucket named oss-shared-scratchp\n\nCoiled\n\nConfigure Coiled to use AWS Cloud with the IAM User created in the step above\nCreate Coiled software environment\n\n\nusing\nmake create\n\n\n\n\n\nStart a Coiled Jupyter notebook from the code directory (the folder to be synced to the cloud notebook)\ncd code && coiled notebook start --sync --region us-east-2 \\\n    --account {env:COILED_ACCOUNT_NAME} \\\n    --name coilednb \\\n    --software &lt;coiled-software-environment-name&gt; \\\n    --vm-type t3.xlarge\nor\nmake coiled-nb\nIf the contents of code/ are to be synced to the Coiled notebook, then run cd code/ before running the coiled notebook start command. This is shown in step 5. above. In make coiled-nb, this is done by tox.ini using the changedir directive.\nThe browser launches the Jupyterlab interface and the contents of the synced folder (code) are visible.\nRun the notebook 01-get-data/coiled_notebooks_demo.ipynb\n\nthe cell to list bucket contents should\n\nrun with no errors since the AWS user has AmazonS3FullAccess privileges\nproduce the following output\n&gt; s3_client.list_buckets()['Buckets']\n[\n    {\n        'Name': 'oss-shared-scratchp',\n        'CreationDate': &lt;creation-datetime(s)-here&gt;\n    },\n    {\n        'Name': &lt;additional-bucket(s)-here&gt;,\n        'CreationDate': &lt;creation-datetime(s)-here&gt;,\n    },\n]\n\n\n\n\n\n\n\nDelete all AWS and Coiled resources that were created by the administrative tasks step earlier using\nmake delete"
  }
]